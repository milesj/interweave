// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Interweave allow list doesnt filter invalid tags and attributes when disabled 1`] = `
<Element tagName="span">
  <span>
    <Element attributes={{ bgcolor: "black" }} tagName="div">
      <div bgcolor="black">
        
  
        <Element attributes={{ color: "red" }} tagName="font">
          <font color="red">
            Outdated font.
          </font>
        </Element>
        
  
        
  
        <Element attributes={{ align: "center" }} tagName="p">
          <p align="center">
            More text 
            <Element tagName="strike">
              <strike>with outdated stuff</strike>
            </Element>
            .
          </p>
        </Element>
        

      </div>
    </Element>
  </span>
</Element>
`;

exports[`Interweave allow list filters invalid tags and attributes 1`] = `
<Element tagName="span">
  <span>
    <Element tagName="div">
      <div>
        
  
        Outdated font.
        
  
        
  
        <Element tagName="p">
          <p>More text with outdated stuff.</p>
        </Element>
        

      </div>
    </Element>
  </span>
</Element>
`;

exports[`Interweave allows empty \`content\` to be passed 1`] = `
<Element tagName="span">
  <span />
</Element>
`;

exports[`Interweave allows empty \`content\` to be passed when using callbacks 1`] = `
<Element tagName="span">
  <span />
</Element>
`;

exports[`Interweave block list filters blocked tags and attributes 1`] = `
<Element tagName="span">
  <span>
    <Element attributes={{ role: "main" }} tagName="main">
      <main role="main">
        
  Main content
  
        <Element tagName="div">
          <div>
            
    
            Link
            
    
            <Element attributes={{ className: "foo" }} tagName="span">
              <span className="foo">
                String
              </span>
            </Element>
            
  
          </div>
        </Element>
        

      </main>
    </Element>
    

    
  Sidebar content

  </span>
</Element>
`;

exports[`Interweave can disable all filters using \`disableFilters\` 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Element attributes={{ href: "foo.com" }} tagName="a">
      <a href="foo.com">
        Bar
      </a>
    </Element>
     Baz
  </span>
</Element>
`;

exports[`Interweave can disable all matchers using \`disableMatchers\` 1`] = `
<Element tagName="span">
  <span>Foo [b] Bar Baz</span>
</Element>
`;

exports[`Interweave can pass filters through props 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Element attributes={{ href: "bar.net", target: "_blank" }} tagName="a">
      <a href="bar.net" target="_blank">
        Bar
      </a>
    </Element>
     Baz
  </span>
</Element>
`;

exports[`Interweave can pass matchers through props 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Element customProp="foo" tagName="span">
      <span>B</span>
    </Element>
     Bar Baz
  </span>
</Element>
`;

exports[`Interweave can pass object based filters through props 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Element attributes={{ href: "bar.net" }} tagName="a">
      <a href="bar.net">
        Bar
      </a>
    </Element>
     Baz
  </span>
</Element>
`;

exports[`Interweave can pass object based matchers through props 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Element customProp="foo" tagName="span">
      <span>B</span>
    </Element>
     Bar Baz
  </span>
</Element>
`;

exports[`Interweave interleaving renders bold in italic 1`] = `
<Element tagName="span">
  <span>
    This should be 
    <i>
      <b>bold and italic</b>
    </i>
    .
  </span>
</Element>
`;

exports[`Interweave interleaving renders italic in bold 1`] = `
<Element tagName="span">
  <span>
    This should be 
    <b>
      <i>italic and bold</i>
    </b>
    .
  </span>
</Element>
`;

exports[`Interweave interleaving renders them separately 1`] = `
<Element tagName="span">
  <span>
    This should be 
    <b>bold</b>
     and this 
    <i>italic</i>
    .
  </span>
</Element>
`;

exports[`Interweave line breaks converts line breaks 1`] = `
<Element tagName="span">
  <span>
    Foo
    <Element selfClose tagName="br">
      <br />
    </Element>
    Bar
  </span>
</Element>
`;

exports[`Interweave line breaks converts line breaks if \`noHtmlExceptMatchers\` is true 1`] = `
<Element tagName="span">
  <span>
    Foo
    <Element selfClose tagName="br">
      <br />
    </Element>
    Bar
  </span>
</Element>
`;

exports[`Interweave line breaks doesnt convert line breaks if \`disableLineBreaks\` is true 1`] = `
<Element tagName="span">
  <span>Foo
Bar</span>
</Element>
`;

exports[`Interweave line breaks doesnt convert line breaks if \`noHtml\` is true 1`] = `
<Element tagName="span">
  <span>Foo
Bar</span>
</Element>
`;

exports[`Interweave line breaks doesnt convert line breaks if it contains HTML 1`] = `
<Element tagName="span">
  <span>
    Foo

    <Element selfClose tagName="br">
      <br />
    </Element>
    Bar
  </span>
</Element>
`;

exports[`Interweave parseMarkup() can modify the markup using onBeforeParse 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Element tagName="i">
      <i>Bar</i>
    </Element>
     Baz
  </span>
</Element>
`;

exports[`Interweave parseMarkup() can modify the tree using onAfterParse 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Element tagName="b">
      <b>Bar</b>
    </Element>
     Baz
    <Element tagName="u">
      <u>Qux</u>
    </Element>
  </span>
</Element>
`;

exports[`Interweave parseMarkup() errors if onAfterParse doesnt return an array 1`] = `"Interweave \`onAfterParse\` must return an array of strings and React elements."`;

exports[`Interweave parseMarkup() errors if onBeforeParse doesnt return a string 1`] = `"Interweave \`onBeforeParse\` must return a valid HTML string."`;

exports[`Interweave parsing and rendering handles void elements correctly 1`] = `
<Element tagName="div">
  <div>
    This has line breaks.
    <Element selfClose tagName="br">
      <br />
    </Element>
    Horizontal rule.
    <Element selfClose tagName="hr">
      <hr />
    </Element>
    An image.
    <Element
      selfClose
      attributes={{ src: "http://domain.com/image.jpg" }}
      tagName="img"
    >
      <img src="http://domain.com/image.jpg" />
    </Element>
  </div>
</Element>
`;

exports[`Interweave render() parses HTML 1`] = `
<Element tagName="div">
  <div>
    Foo 
    <Element tagName="b">
      <b>Bar</b>
    </Element>
     Baz
  </div>
</Element>
`;

exports[`Interweave transform prop allows blocked 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Dummy>
      <iframe title="foo" />
    </Dummy>
     Bar
  </span>
</Element>
`;

exports[`Interweave transform prop replaces the element 1`] = `
<Element tagName="span">
  <span>
    Foo 
    <Dummy>
      <div />
    </Dummy>
     Bar
  </span>
</Element>
`;

exports[`Interweave transform prop skips the element 1`] = `
<Element tagName="span">
  <span>Foo  Bar</span>
</Element>
`;
